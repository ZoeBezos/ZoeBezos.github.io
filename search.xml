<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2023/05/13/node_modules/hexo-filter-mermaid-diagrams/README/"/>
      <url>/2023/05/13/node_modules/hexo-filter-mermaid-diagrams/README/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-filter-mermaid-diagrams"><a href="#hexo-filter-mermaid-diagrams" class="headerlink" title="hexo-filter-mermaid-diagrams"></a>hexo-filter-mermaid-diagrams</h1><p><img src="/2023/05/13/node_modules/hexo-filter-mermaid-diagrams/README/header.png"><br>Generation of diagrams and flowcharts from text in a similar manner as markdown.<br>Mermaid plugin is using <a href="https://mermaidjs.github.io/">mermaid.js</a> fro hexo!</p><h3 id="flowchart"><a href="#flowchart" class="headerlink" title="flowchart"></a>flowchart</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">graph TD;<br>    A--&gt;B;<br>    A--&gt;C;<br>    B--&gt;D;<br>    C--&gt;D;<br></code></pre></td></tr></table></figure><p><img src="/2023/05/13/node_modules/hexo-filter-mermaid-diagrams/README/flow.png"></p><h3 id="Sequence-diagram"><a href="#Sequence-diagram" class="headerlink" title="Sequence diagram"></a>Sequence diagram</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">sequenceDiagram<br>    participant Alice<br>    participant Bob<br>    Alice-&gt;&gt;John: Hello John, how are you?<br>    loop Healthcheck<br>        John-&gt;&gt;John: Fight against hypochondria<br>    end<br>    Note right of John: Rational thoughts &lt;br/&gt;prevail...<br>    John--&gt;&gt;Alice: Great!<br>    John-&gt;&gt;Bob: How about you?<br>    Bob--&gt;&gt;John: Jolly good!<br></code></pre></td></tr></table></figure><p><img src="/2023/05/13/node_modules/hexo-filter-mermaid-diagrams/README/sequence.png"></p><h3 id="Gantt-diagram"><a href="#Gantt-diagram" class="headerlink" title="Gantt diagram"></a>Gantt diagram</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">gantt<br>dateFormat  YYYY-MM-DD<br>title Adding GANTT diagram to mermaid<br><br>section A section<br>Completed task            :done,    des1, 2014-01-06,2014-01-08<br>Active task               :active,  des2, 2014-01-09, 3d<br>Future task               :         des3, after des2, 5d<br>Future task2               :         des4, after des3, 5d<br></code></pre></td></tr></table></figure><p><img src="/2023/05/13/node_modules/hexo-filter-mermaid-diagrams/README/gantt.png"></p><h3 id="Class-diagram-❗️-experimental"><a href="#Class-diagram-❗️-experimental" class="headerlink" title="Class diagram - ❗️ experimental"></a>Class diagram - ❗️ experimental</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">classDiagram<br>Class01 &lt;|-- AveryLongClass : Cool<br>Class03 *-- Class04<br>Class05 o-- Class06<br>Class07 .. Class08<br>Class09 --&gt; C2 : Where am i?<br>Class09 --* C3<br>Class09 --|&gt; Class07<br>Class07 : equals()<br>Class07 : Object[] elementData<br>Class01 : size()<br>Class01 : int chimp<br>Class01 : int gorilla<br>Class08 &lt;--&gt; C2: Cool label<br></code></pre></td></tr></table></figure><p><img src="/2023/05/13/node_modules/hexo-filter-mermaid-diagrams/README/class.png"></p><h3 id="Git-graph-❗️-experimental"><a href="#Git-graph-❗️-experimental" class="headerlink" title="Git graph - ❗️ experimental"></a>Git graph - ❗️ experimental</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">gitGraph:<br>options<br>&#123;<br>    &quot;nodeSpacing&quot;: 150,<br>    &quot;nodeRadius&quot;: 10<br>&#125;<br>end<br>commit<br>branch newbranch<br>checkout newbranch<br>commit<br>commit<br>checkout master<br>commit<br>commit<br>merge newbranch<br></code></pre></td></tr></table></figure><p><img src="/2023/05/13/node_modules/hexo-filter-mermaid-diagrams/README/git.png"></p><blockquote><p>Click here <a href="https://github.com/knsv/mermaid">Mermaid</a> to learn more official discriptions! </p></blockquote><h2 id="Step1-Install-Package"><a href="#Step1-Install-Package" class="headerlink" title="Step1 Install Package"></a>Step1 Install Package</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ yarn add hexo-filter-mermaid-diagrams<br></code></pre></td></tr></table></figure><h2 id="Step2-Edit-Config"><a href="#Step2-Edit-Config" class="headerlink" title="Step2 Edit Config"></a>Step2 Edit Config</h2><p>After installed, you should edit hexo config file: <code>_config.yml</code>:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># mermaid chart</span><br><span class="hljs-attr">mermaid:</span> <span class="hljs-comment">## mermaid url https://github.com/knsv/mermaid</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>  <span class="hljs-comment"># default true</span><br>  <span class="hljs-attr">version:</span> <span class="hljs-string">&quot;7.1.2&quot;</span> <span class="hljs-comment"># default v7.1.2</span><br>  <span class="hljs-attr">options:</span>  <span class="hljs-comment"># find more api options from https://github.com/knsv/mermaid/blob/master/src/mermaidAPI.js</span><br>    <span class="hljs-comment">#startOnload: true  // default true</span><br></code></pre></td></tr></table></figure><h2 id="Step3-include-mermaid-js-in-pug-or-ejs"><a href="#Step3-include-mermaid-js-in-pug-or-ejs" class="headerlink" title="Step3 include mermaid.js in pug or ejs"></a>Step3 include mermaid.js in pug or ejs</h2><p>After edited <code>_config.yml</code>, you shou edit your blog page component like <code>after_footer.pug</code> or <code>after-footer.ejs</code>.</p><p>Where is it?</p><p>Open your theme folder, you can see the <code>layout</code> folder, open it and then you could see it.</p><p>Okey! if your blog is used pug, you can copy the below codes in <code>after_footer.pug</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pug">if theme.mermaid.enable == true<br>  script(type=&#x27;text/javascript&#x27;, id=&#x27;maid-script&#x27; mermaidoptioins=theme.mermaid.options src=&#x27;https://unpkg.com/mermaid@&#x27;+ theme.mermaid.version + &#x27;/dist/mermaid.min.js&#x27; + &#x27;?v=&#x27; + theme.version)<br>  script.<br>    if (window.mermaid) &#123;<br>      var options = JSON.parse(document.getElementById(&#x27;maid-script&#x27;).getAttribute(&#x27;mermaidoptioins&#x27;));<br>      mermaid.initialize(options);<br>    &#125;<br></code></pre></td></tr></table></figure><p>or <code>after-footer.ejs</code> should copy below codes:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">&lt;% if (theme.mermaid.enable) &#123; %&gt;<br>  &lt;script src=&#x27;https://unpkg.com/mermaid@&lt;%= theme.mermaid.version %&gt;/dist/mermaid.min.js&#x27;&gt;&lt;/script&gt;<br>  &lt;script&gt;<br>    if (window.mermaid) &#123;<br>      mermaid.initialize(&#123;theme: &#x27;forest&#x27;&#125;);<br>    &#125;<br>  &lt;/script&gt;<br>&lt;% &#125; %&gt;<br></code></pre></td></tr></table></figure><h2 id="Fixed"><a href="#Fixed" class="headerlink" title="Fixed"></a>Fixed</h2><ul><li>className ‘mermaid’ can be showed mermaid diagrams everywhere</li><li>Keep dom right;</li><li><del>Article preview lists can show code, and post show diagrams;</del></li></ul><h2 id="Credits"><a href="#Credits" class="headerlink" title="Credits"></a>Credits</h2><p>Thanks to the <a href="https://mermaidjs.github.io/">Mermaid</a> project!</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/05/12/README/"/>
      <url>/2023/05/12/README/</url>
      
        <content type="html"><![CDATA[<p><a href="https://996.icu"><img src="https://img.shields.io/badge/link-996.icu-red.svg?style=flat-square"></a> <a href="https://pytorch.org/"><img src="https://img.shields.io/badge/python-3.5-green.svg?style=flat-square"></a> <img src="https://img.shields.io/badge/platform-windows-lightgrey?style=flat-square"> <a href="http://hits.dwyl.io/Holy-Shine/GitToc"><img src="http://hits.dwyl.io/Holy-Shine/GitToc.svg" alt="HitCount"></a></p><h1 id="GitToc"><a href="#GitToc" class="headerlink" title="GitToc"></a>GitToc</h1><p>Generate a Readme toc for your Github repository.</p><p><a href="README_CN.md">中文版</a></p><h2 id="Glimpse"><a href="#Glimpse" class="headerlink" title="Glimpse"></a>Glimpse</h2><p>This simple script can parse your markdown file and generate a Toc like this:</p><img src="/2023/05/12/README/effect.png" width="70%"><p>This generated toc supports inner page jumping.</p><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>Assuming that your target file’s name is <code>targetFile.md</code>. Just type this command in shell:</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">python gitToc.py targetFile.md</span><br></code></pre></td></tr></table></figure><p>You will get a new markdown file named <code>targetFile_with_toc.md</code> in current directory.  </p><h2 id="Platform"><a href="#Platform" class="headerlink" title="Platform"></a>Platform</h2><ul><li><p><strong>Windows</strong></p><p>This simple script has been packed into windows PE file(.exe) within <a href="https://github.com/Holy-Shine/GitToc/releases/tag/v1.0.0">release version</a> by <a href="https://pypi.org/project/PyInstaller/">pyinstaller</a>. Now you can click <code>gitToc_GUI.exe</code> directly and do transformation job in your Windows PC.</p></li></ul><h2 id="Online-Usage"><a href="#Online-Usage" class="headerlink" title="Online Usage"></a>Online Usage</h2><p>The author <a href="https://github.com/lzw5399">@lzw5399</a> made an online conversion tool <strong>TocGenerator</strong> based on GitToc.</p><p>TocGenerator Github link: <a href="https://github.com/lzw5399/TocGenerator">https://github.com/lzw5399/TocGenerator</a></p><p>Online conversion address: <a href="https://toc.codepie.fun/">https://toc.codepie.fun/</a></p><p><strong>Instructions:</strong></p><p><img src="/2023/05/12/README/online.gif"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/05/12/README_CN/"/>
      <url>/2023/05/12/README_CN/</url>
      
        <content type="html"><![CDATA[<p><a href="https://996.icu"><img src="https://img.shields.io/badge/link-996.icu-red.svg?style=flat-square"></a> <a href="https://pytorch.org/"><img src="https://img.shields.io/badge/python-3.5-green.svg?style=flat-square"></a> <img src="https://img.shields.io/badge/platform-windows-lightgrey?style=flat-square"> <a href="http://hits.dwyl.io/Holy-Shine/GitToc"><img src="http://hits.dwyl.io/Holy-Shine/GitToc.svg" alt="HitCount"></a></p><h1 id="GitToc"><a href="#GitToc" class="headerlink" title="GitToc"></a>GitToc</h1><p>为你的Github仓库的Readme自动生成一个目录</p><p><a href="README.md">English readme</a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>如下是转换效果：</p><img src="/2023/05/12/README_CN/effect.png" width="70%"><p>转换后的目录支持页内跳转</p><h2 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h2><p>假设你的目标文件名为 <code>targetFile.md</code>. 在你的命令行下键入下面命令即可:</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">python gitToc.py targetFile.md</span><br></code></pre></td></tr></table></figure><p>你会在你的当前目录下获得一个名为 <code>targetFile_with_toc.md</code> 的文件。</p><h2 id="平台"><a href="#平台" class="headerlink" title="平台"></a>平台</h2><ul><li><p><strong>Windows</strong></p><p>这个脚本已经通过 <a href="https://pypi.org/project/PyInstaller/">pyinstaller</a> 打包成windows下可用的程序，在<a href="https://github.com/Holy-Shine/GitToc/releases/tag/v1.0.0">release</a>里。 现在你可以直接点击 <code>gitToc_GUI.exe</code> 来完成你的文件转换任务（window机器上）。</p></li></ul><h2 id="在线使用"><a href="#在线使用" class="headerlink" title="在线使用"></a>在线使用</h2><p>作者<a href="https://github.com/lzw5399">@lzw5399 </a>基于GitToc制作了一个在线转换工具<strong>TocGenerator</strong>。</p><p>TocGenerator仓库地址： <a href="https://github.com/lzw5399/TocGenerator">https://github.com/lzw5399/TocGenerator</a> </p><p>在线转换地址：<a href="https://toc.codepie.fun/">https://toc.codepie.fun/</a></p><p><strong>使用方法：</strong></p><p><img src="/2023/05/12/README_CN/online.gif"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/05/12/demo_with_toc/"/>
      <url>/2023/05/12/demo_with_toc/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#head1">Heading level 1</a><ul><li><a href="#head2">Heading level 1.1</a><ul><li><a href="#head3">Heading level 1.1.1</a></li><li><a href="#head4">Heading level 1.1.2</a></li></ul></li><li><a href="#head5">Heading levle 1.2</a></li></ul></li><li><a href="#head6">Heading level 2</a><ul><li><a href="#head7">Heading level 2.1 </a></li><li><a href="#head8">Heading level 2.2</a></li></ul></li><li><a href="#head9"> Heading</a></li></ul><h1 id="Heading-level-1"><a href="#Heading-level-1" class="headerlink" title="Heading level 1"></a><span id="head1">Heading level 1</span></h1><p>hello world.</p><h2 id="Heading-level-1-1"><a href="#Heading-level-1-1" class="headerlink" title="Heading level 1.1"></a><span id="head2">Heading level 1.1</span></h2><h3 id="Heading-level-1-1-1"><a href="#Heading-level-1-1-1" class="headerlink" title="Heading level 1.1.1"></a><span id="head3">Heading level 1.1.1</span></h3><h3 id="Heading-level-1-1-2"><a href="#Heading-level-1-1-2" class="headerlink" title="Heading level 1.1.2"></a><span id="head4">Heading level 1.1.2</span></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hello world!&#x27;</span>)<br><span class="hljs-comment"># test indent</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hhh&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="Heading-levle-1-2"><a href="#Heading-levle-1-2" class="headerlink" title="Heading levle 1.2"></a><span id="head5">Heading levle 1.2</span></h2><h1 id="Heading-level-2"><a href="#Heading-level-2" class="headerlink" title="Heading level 2"></a><span id="head6">Heading level 2</span></h1><h2 id="Heading-level-2-1"><a href="#Heading-level-2-1" class="headerlink" title="Heading level 2.1 "></a><span id="head7">Heading level 2.1 </span></h2><h2 id="Heading-level-2-2"><a href="#Heading-level-2-2" class="headerlink" title="Heading level 2.2"></a><span id="head8">Heading level 2.2</span></h2><h1 id="Heading"><a href="#Heading" class="headerlink" title=" Heading"></a><span id="head9"> Heading</span></h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/05/12/demo/"/>
      <url>/2023/05/12/demo/</url>
      
        <content type="html"><![CDATA[<h1 id="Heading-level-1"><a href="#Heading-level-1" class="headerlink" title="Heading level 1"></a>Heading level 1</h1><p>hello world.</p><h2 id="Heading-level-1-1"><a href="#Heading-level-1-1" class="headerlink" title="Heading level 1.1"></a>Heading level 1.1</h2><h3 id="Heading-level-1-1-1"><a href="#Heading-level-1-1-1" class="headerlink" title="Heading level 1.1.1"></a>Heading level 1.1.1</h3><h3 id="Heading-level-1-1-2"><a href="#Heading-level-1-1-2" class="headerlink" title="Heading level 1.1.2"></a>Heading level 1.1.2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hello world!&#x27;</span>)<br><span class="hljs-comment"># test indent</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hhh&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="Heading-levle-1-2"><a href="#Heading-levle-1-2" class="headerlink" title="Heading levle 1.2"></a>Heading levle 1.2</h2><h1 id="Heading-level-2"><a href="#Heading-level-2" class="headerlink" title="Heading level 2"></a>Heading level 2</h1><h2 id="Heading-level-2-1"><a href="#Heading-level-2-1" class="headerlink" title="Heading level 2.1"></a>Heading level 2.1</h2><h2 id="Heading-level-2-2"><a href="#Heading-level-2-2" class="headerlink" title="Heading level 2.2"></a>Heading level 2.2</h2><h1 id="Heading"><a href="#Heading" class="headerlink" title="Heading"></a>Heading</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>remove-element</title>
      <link href="/2023/05/11/remove-element/"/>
      <url>/2023/05/11/remove-element/</url>
      
        <content type="html"><![CDATA[<h1 id="27-移除元素"><a href="#27-移除元素" class="headerlink" title="27. 移除元素"></a><a href="https://leetcode.cn/problems/remove-element/">27. 移除元素</a></h1><h2 id="C-solution"><a href="#C-solution" class="headerlink" title="C++ solution"></a>C++ solution</h2><pre><code class="c++">class Solution &#123;public:    int removeElement(vector&lt;int&gt;&amp; nums, int val) &#123;        int len=nums.size();        auto iter =std::remove(nums.begin(),nums.end(),val);        nums.erase(iter, nums.end());                 return nums.size();    &#125;&#125;;</code></pre><h2 id="Java-solution"><a href="#Java-solution" class="headerlink" title="Java solution"></a>Java solution</h2><pre><code class="java">    </code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Binary Search</title>
      <link href="/2023/05/10/binary-search/"/>
      <url>/2023/05/10/binary-search/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#head1"> <strong>[Ⅰ 704 二分查找]</strong> </a><ul><li><a href="#head2"> NOTE</a><ul><li><a href="#head3">1. 每次写二分最容易纠结的part就是下面C++代码里面的A,B,C,D行:</a></li><li><a href="#head4">2. 二分法取中间值防溢出</a></li></ul></li><li><a href="#head5">C++ solution</a></li><li><a href="#head6">Java solution</a></li></ul></li><li><a href="#head7"><strong>[Ⅱ  35. 搜索插入位置]</strong></a><ul><li><a href="#head8">C++ solution</a></li><li><a href="#head9">Java solution</a></li></ul></li><li><a href="#head10">[ Ⅲ 34. 在排序数组中查找元素的第一个和最后一个位置]</a><ul><li><a href="#head11"> NOTE</a><ul><li><a href="#head12">1. 使用二分法在有序数组中查找某个数的左边界，即某个数第一次出现的位置</a></li><li><a href="#head13">2. 使用二分法在有序数组中查找某个数的右边界，即某个数最后一次出现的位置</a></li></ul></li><li><a href="#head14">C++ solution</a></li><li><a href="#head15">Java solution</a></li></ul></li></ul><h1 id="Ⅰ-704-二分查找"><a href="#Ⅰ-704-二分查找" class="headerlink" title=" Ⅰ 704 二分查找 "></a><span id="head1"> <strong><a href="https://leetcode.cn/problems/binary-search/">Ⅰ 704 二分查找</a></strong> </span></h1><p><img src="/2023/05/10/binary-search/1.png" alt="704"></p><h2 id="NOTE"><a href="#NOTE" class="headerlink" title=" NOTE"></a><span id="head2"> NOTE</span></h2><h3 id="1-每次写二分最容易纠结的part就是下面C-代码里面的A-B-C-D行"><a href="#1-每次写二分最容易纠结的part就是下面C-代码里面的A-B-C-D行" class="headerlink" title="1. 每次写二分最容易纠结的part就是下面C++代码里面的A,B,C,D行:"></a><span id="head3">1. 每次写二分最容易纠结的part就是下面C++代码里面的A,B,C,D行:</span></h3><ul><li>A 处是用nums.size()-1还是nums.size()?</li><li>B 处是 &lt;&#x3D; 还是 &lt; ?</li><li>C 处是 mid 还是 mid - 1 ?</li><li>D 处是 mid 还是 mid + 1 ?</li></ul><p>null- 实际上这些不同的本质实际上是对于数组区间的划分法不同：</p><table><thead><tr><th></th><th>左闭右闭区间</th><th>左闭右开区间</th></tr></thead><tbody><tr><td>A</td><td><code>high=nums.size()-1</code></td><td><code>high=nums.size()</code></td></tr><tr><td>B</td><td><code> while(low&lt;=high)</code></td><td><code> while(low&lt;high)</code></td></tr><tr><td>C</td><td><code> high=mid-1;</code></td><td><code> high=mid;</code></td></tr><tr><td>D</td><td><code>low=mid+1;</code></td><td><code>low=mid+1;</code></td></tr></tbody></table><h3 id="2-二分法取中间值防溢出"><a href="#2-二分法取中间值防溢出" class="headerlink" title="2. 二分法取中间值防溢出"></a><span id="head4">2. 二分法取中间值防溢出</span></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">mid = (low+high) / <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>E 处的写法在两大数相加的时候容易发生溢出，可以改成下面的写法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">mid = low + (( high - low ) / <span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><h2 id="C-solution"><a href="#C-solution" class="headerlink" title="C++ solution"></a><span id="head5">C++ solution</span></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> </span><br><span class="hljs-function">    <span class="hljs-type">int</span> <span class="hljs-title">search</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> target)</span> </span>&#123;<br><br><span class="hljs-comment">/*A*/</span>   <span class="hljs-type">int</span> low=<span class="hljs-number">0</span>,high=nums.<span class="hljs-built_in">size</span>()<span class="hljs-number">-1</span>;<br><br><span class="hljs-comment">/*B*/</span>   <span class="hljs-keyword">while</span>(low&lt;=high)&#123;<br><br><span class="hljs-comment">/*E*/</span>        <span class="hljs-type">int</span> mid=(low+high)/<span class="hljs-number">2</span>;<br><br>            <span class="hljs-keyword">if</span>(target==nums[mid])&#123;<br>                <span class="hljs-keyword">return</span> mid;<br>            &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(target&lt;nums[mid])&#123;<br><span class="hljs-comment">/*C*/</span>           high=mid<span class="hljs-number">-1</span>;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-comment">/*D*/</span>           low=mid+<span class="hljs-number">1</span>;<br>            &#125;<br><br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h2 id="Java-solution"><a href="#Java-solution" class="headerlink" title="Java solution"></a><span id="head6">Java solution</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">search</span><span class="hljs-params">(<span class="hljs-type">int</span>[] nums, <span class="hljs-type">int</span> target)</span> &#123;<br><br>        <span class="hljs-type">int</span> low=<span class="hljs-number">0</span>,high=nums.length-<span class="hljs-number">1</span>;<br><br>        <span class="hljs-keyword">while</span>(low&lt;=high)&#123;<br><br>            <span class="hljs-type">int</span> mid=(low+high)/<span class="hljs-number">2</span>;<br><br>            <span class="hljs-keyword">if</span>(nums[mid]==target)&#123;<br>                <span class="hljs-keyword">return</span> mid;<br>            &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nums[mid]&gt;=target)&#123;<br>                high=mid-<span class="hljs-number">1</span>;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                low=mid+<span class="hljs-number">1</span>;<br>            &#125;<br><br>        &#125;<br><br>        <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="Ⅱ-35-搜索插入位置"><a href="#Ⅱ-35-搜索插入位置" class="headerlink" title="Ⅱ  35. 搜索插入位置"></a><span id="head7"><strong><a href="https://leetcode.cn/problems/search-insert-position/">Ⅱ  35. 搜索插入位置</a></strong></span></h1><p><img src="/2023/05/10/binary-search/2.png" alt="35"></p><h2 id="C-solution-1"><a href="#C-solution-1" class="headerlink" title="C++ solution"></a><span id="head8">C++ solution</span></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">searchInsert</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> target)</span> </span>&#123;<br>        <span class="hljs-type">int</span> low =<span class="hljs-number">0</span>,high=nums.<span class="hljs-built_in">size</span>()<span class="hljs-number">-1</span>,mid,ans=nums.<span class="hljs-built_in">size</span>();<br><br>        <span class="hljs-keyword">while</span>(low&lt;=high)&#123;<br><br>            mid =(low+high)&gt;&gt;<span class="hljs-number">1</span>;<br><br>            <span class="hljs-keyword">if</span>(target&lt;=nums[mid])&#123;<span class="hljs-comment">//在左边 </span><br>            ans=mid;<br>                high=mid<span class="hljs-number">-1</span>;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                low=mid+<span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br><br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h2 id="Java-solution-1"><a href="#Java-solution-1" class="headerlink" title="Java solution"></a><span id="head9">Java solution</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">searchInsert</span><span class="hljs-params">(<span class="hljs-type">int</span>[] nums, <span class="hljs-type">int</span> target)</span> &#123;<br><br>        <span class="hljs-type">int</span> <span class="hljs-variable">low</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, high = nums.length-<span class="hljs-number">1</span>, ans = nums.length;<br><br>        <span class="hljs-keyword">while</span>(low&lt;=high)&#123;<br><br>            <span class="hljs-type">int</span> <span class="hljs-variable">mid</span> <span class="hljs-operator">=</span> ( low + high ) &gt;&gt; <span class="hljs-number">1</span>;<br><br>            <span class="hljs-keyword">if</span>(target &lt;= nums[mid])&#123;<span class="hljs-comment">// 在左边</span><br><br>                ans = mid;<br><br>                high = mid-<span class="hljs-number">1</span>;<br><br>            &#125; <span class="hljs-keyword">else</span>&#123;<br><br>                low = mid +<span class="hljs-number">1</span>;<br><br>            &#125;<br>        &#125;<br>         <span class="hljs-keyword">return</span> ans;   <br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h1 id="Ⅲ-34-在排序数组中查找元素的第一个和最后一个位置"><a href="#Ⅲ-34-在排序数组中查找元素的第一个和最后一个位置" class="headerlink" title=" Ⅲ 34. 在排序数组中查找元素的第一个和最后一个位置"></a><span id="head10"><a href="https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array/"> Ⅲ 34. 在排序数组中查找元素的第一个和最后一个位置</a></span></h1><p><img src="/2023/05/10/binary-search/3.png" alt="34"></p><h2 id="NOTE-1"><a href="#NOTE-1" class="headerlink" title=" NOTE"></a><span id="head11"> NOTE</span></h2><h3 id="1-使用二分法在有序数组中查找某个数的左边界，即某个数第一次出现的位置"><a href="#1-使用二分法在有序数组中查找某个数的左边界，即某个数第一次出现的位置" class="headerlink" title="1. 使用二分法在有序数组中查找某个数的左边界，即某个数第一次出现的位置"></a><span id="head12">1. 使用二分法在有序数组中查找某个数的左边界，即某个数第一次出现的位置</span></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs mermaid">graph LR<br>A[Start] --&gt; B&#123;empty?&#125;<br>B -- yes --&gt; C[end]<br>B -- no --&gt; D[ left border = 0 &lt;br&gt; right border = length-1 &lt;br&gt; ]<br>D --&gt; F&#123;target &lt;= the middle element of array ?&#125;<br>F -- yes --&gt; G[the left border must in the left half,&lt;br&gt; so search the left half]<br>G --&gt; I[right border = middle ]<br>F -- no --&gt; H[the left border must in the right half,&lt;br&gt; so search the right half] <br>H --&gt; J[left border = mid + 1]<br>I --&gt; K&#123;left border &gt;= right vorder?&#125;<br>J --&gt; K<br>K --yes--&gt; L&#123; the element of left border = target?&#125;<br>K --no--&gt; F<br>L --yes--&gt; M[found the left border]<br>L --no--&gt; C<br></code></pre></td></tr></table></figure><h3 id="2-使用二分法在有序数组中查找某个数的右边界，即某个数最后一次出现的位置"><a href="#2-使用二分法在有序数组中查找某个数的右边界，即某个数最后一次出现的位置" class="headerlink" title="2. 使用二分法在有序数组中查找某个数的右边界，即某个数最后一次出现的位置"></a><span id="head13">2. 使用二分法在有序数组中查找某个数的右边界，即某个数最后一次出现的位置</span></h3><p>与查找左边界不同的一个关键点有计算mid的时候需要l+r+1！<br>否则会陷入死循环</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs mermaid">graph LR<br>a[start] --&gt; b&#123;empty?&#125;<br>b --yes--&gt; c[end]<br>b --no--&gt; d[left border = 0&lt;br&gt;right border =lenth-1]<br>d --&gt; e&#123;target &gt;= the middle element of the array &lt;font color=red&gt;+1!&lt;/font&gt;?&#125;<br>e --yes--&gt; f[search the right half]<br>e -- no--&gt; g[search the left half]<br>f--&gt; h&#123; l&gt;=r? &#125;<br>g--&gt;h<br>h--yes--&gt;e<br>h--no--&gt;i&#123;the element of right border == target?&#125;<br>i--yes--&gt;j[found the right border]<br>i--no--&gt;c<br></code></pre></td></tr></table></figure><h2 id="C-solution-2"><a href="#C-solution-2" class="headerlink" title="C++ solution"></a><span id="head14">C++ solution</span></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs c++"><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">searchRange</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> target)</span> </span>&#123;<br>        <br>        <span class="hljs-type">int</span> left = <span class="hljs-built_in">binarySearch</span>(nums,target,<span class="hljs-literal">true</span>);<br>        <span class="hljs-type">int</span> right =  <span class="hljs-built_in">binarySearch</span>(nums,target,<span class="hljs-literal">false</span>)<span class="hljs-number">-1</span>;<br>        <br>        <span class="hljs-keyword">if</span>(left &lt;= right &amp;&amp; right &lt; nums.<span class="hljs-built_in">size</span>() &amp;&amp; nums[left] == target &amp;&amp; nums[right] == target)&#123;<br>        <br>        <span class="hljs-keyword">return</span> vector&lt;<span class="hljs-type">int</span>&gt;&#123;left,right&#125;;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">return</span> vector&lt;<span class="hljs-type">int</span>&gt;&#123;<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>&#125;;<br>&#125;<br>        <br>    &#125;<br>    <br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">binarySearch</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;nums,<span class="hljs-type">int</span> target,<span class="hljs-type">bool</span> isLeft)</span></span>&#123;<br>    <span class="hljs-type">int</span> low =<span class="hljs-number">0</span>,high=nums.<span class="hljs-built_in">size</span>()<span class="hljs-number">-1</span>,mid,ans=nums.<span class="hljs-built_in">size</span>();<br>    <br>    <span class="hljs-keyword">while</span>(low&lt;=high)&#123;<br>    <br>    mid=(low+high)&gt;&gt;<span class="hljs-number">1</span>;<br>    <br>    <span class="hljs-keyword">if</span>(target&lt;nums[mid]||isLeft&amp;&amp;target&lt;=nums[mid])&#123;<br>    ans = mid;<br>    high = mid - <span class="hljs-number">1</span>;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>low = mid + <span class="hljs-number">1</span>;<br>&#125;<br>&#125;<br>    <span class="hljs-keyword">return</span> ans;<br>&#125;<br>    <br>&#125;;<br><br></code></pre></td></tr></table></figure><h2 id="Java-solution-2"><a href="#Java-solution-2" class="headerlink" title="Java solution"></a><span id="head15">Java solution</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span>[] searchRange(<span class="hljs-type">int</span>[] nums, <span class="hljs-type">int</span> target) &#123;<br>      <span class="hljs-type">int</span> [] arr=&#123;-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>&#125;;<br><span class="hljs-type">int</span> <span class="hljs-variable">left</span> <span class="hljs-operator">=</span> binarySearch(nums, target, <span class="hljs-literal">true</span>);<br><span class="hljs-type">int</span> <span class="hljs-variable">right</span> <span class="hljs-operator">=</span> binarySearch(nums, target, <span class="hljs-literal">false</span>)-<span class="hljs-number">1</span>;<br><br><span class="hljs-keyword">if</span>(left&lt;=right &amp;&amp; right&lt;nums.length &amp;&amp; nums[left] == target &amp;&amp; nums[right] == target)&#123;<br>arr[<span class="hljs-number">0</span>]=left;<br>arr[<span class="hljs-number">1</span>]=right;<br>&#125; <br><span class="hljs-keyword">return</span> arr;<br><br>    &#125;<br><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">binarySearch</span><span class="hljs-params">(<span class="hljs-type">int</span>[] nums, <span class="hljs-type">int</span> target, <span class="hljs-type">boolean</span> isLeft)</span>&#123;<br><span class="hljs-type">int</span> <span class="hljs-variable">low</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, high = nums.length-<span class="hljs-number">1</span>, mid, ans = nums.length;<br><span class="hljs-keyword">while</span>(low&lt;=high)&#123;<br>mid=(low+high)&gt;&gt;<span class="hljs-number">1</span>;<br><span class="hljs-keyword">if</span>(target &lt; nums[mid]|| isLeft &amp;&amp; target &lt;= nums[mid])&#123;<br>ans = mid;<br>high = mid - <span class="hljs-number">1</span>;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>low = mid + <span class="hljs-number">1</span>;<br>&#125;<br><br>&#125;<br><span class="hljs-keyword">return</span> ans;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
