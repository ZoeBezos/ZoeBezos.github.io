<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>6-1-june-schedule</title>
      <link href="/2023/06/01/6-1-june-schedule/"/>
      <url>/2023/06/01/6-1-june-schedule/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="e0d0408509b94e4dc258798a0bb014383ea5d4b68c485f77ac4508ddf86b5d44">1ae9fe665b01d0dcd85b0098a19b5bf9f254f684d18a762a1a26a951f94a7d1d00b18154717c8080bb63c0c07c562a58e33f8bca2331d05770bd1b6997fd05352e691a518a18c9557cfd94945d2a7ccb04f65b0d2aee504a843b6cedb4e60bed18921df4fe503ee0d0048ff295cab07282ff42f90c7f78000f9df426002134114cfa0c6cb19e9e90ae690acace3897bedbb11366b248dc6e5a8f69392113ce51050f982a8fa043d39da399dec0562b1e919dead1ab33a5bb209a2a9c759f541263a63f4605a016302a1eadc55eb5d98c0a77f8166942d7a91e8084e38fe58053d78e3bfd19d05e0fdc4f2501acab4fb7c7be4095938b2b50c8238a21f4bf6d24c554e697ced034c39081bc053bcb212aed5949e559049d45eba72a50c16dd397489cb61c7c91924bd83433216699d21796722fb03150d13ec3f8ad74c6b8ad7d43493324e40ee54c154f7a638e6724680d11a81b31a0f8c8893687eb85a5b0b4dba4ed679bbe763507541be9ab48620fae58a4fb80434b86267a9544b9a950d5f402b966e478f92f14d63dbe09d789beab5e03077c250ccbc1f80c69daa0eb6e1b1770f1237c23111ea4d840d34d2d044485c6192d866605fcc51494f9db28368a276087960ff459252d24373834f10c3e9e31996e2a6db6ad039b704174df17cd3b4dfaf9767e0f8be2d6672eae3968426e0bd38d31c3e6e29ae70d057ad65d69195d85c867931809ba767af9a05a6e24bd198881057d04733ee51aae51b708e215a23f02551fb8d419c7310c0615868d13aadf510d757cdb9a325f0fd24e62b21ce05ce19bb20c744d7587c9cf5ae031f27efec3a2ab097b6e0b1d444d4bbf09503c0221eebd1f41d8ee7c651151c7b8ea8e57b1b704909828f49458e3591e830775aac8a97337a21f747613fd6616ecf3d9d91f3415c67de25ef61ea2aa05fd3ca2eca1b2b73119dac657c055d465b040755b9acf235c69caf743b4a81568f565d4fb01457b5a554a86260716487f2e858a1388347cca04deb370cf410eb2c5385ceb1bf71e88c78eaaa51e7f20af659bb7e79c629e40afc9164e8c81856fd2893009dcacdeda60f21f5e6f0d9570c165c38649aecf8842d18a148125bae79262abd046f0808ff38e97a0aa011b6eaab039ee16b4adbb3b7ba85dae8a9622ab369ed9d72632e45809d22e9122d1600a939d73e568d7e6dfaba9902e4ad6cf5ca5c3d1995d7fe8fc1dc6fdde3874f4eaf62c5a8a18df271d4d984da2b65abbb9fbb67691ac84ac88b7028916ffa28ab01da166a41fe147e5873daa09dfa3985c76a2facc7d75817ac8a4ff28b4d3a25c810b225579dc86910b62026df83d938d334e192c77613470d4b5f2f0fe98e4992b88533ef4bfec839c950da642f051b9619d69b71abe5a485eaa7d71847c12126a9e9c59403d4bb1ef295b675e5d747ac80518a9fd5de407b83e96ba3a912c7538c959d42abd2fa9d0f1114adda3c93b5bfba5c3b698ecac7b0fed84a157cc842299d7a05e4d3b9b4a16438156c71c07290d94dca25c65bcbad7a7d651d01ce3531c800f5f05918246fda5a5958c23127db5ba6ed7d797771090c8657f446a9a767aa3a356e2c069ba5719bbf54944955aa12848983939bfb87fd2045d1c3fc13d4769d7aeb10c6a1d40440a332549956fc2dc305fad322cc109053c898f0da467941b937ca83c9c16f61053e2d25390a64804b9a59c12bed75ba5ceb59b03d0d2daa4e93557252d3a153351f2fc7641ecc33f43f18b273527a3fa301079b63c67d561e12a924dd767322572fe7675d191dc3e5d8eaa314e42417364f03d799fb29f213f3a3a838bca516425724ebcd61d46aa5a785fa71bb6544c13e6548965b2e7de25f31ce7076e3feb64eacbd0cd3b2d1d80266c374c2af4772ae0ac29c32138c4dcd7bc428401c93ba43b49c54cf135bcddde33dbcf7960e0a856aa394d8ae585b7096ed9bd695950c17c613502238d7f25d8add084d4fd67611ff574e5c6732708c224a67a45e97e13f9ce46a51b2ef82de46f8c1c6163eb29d74531f54a755ed6187bf80cad6522591b8a9274931e461f152fb61af97cd5ec7a886614c5e4b512699f953e59ae3ee08862803427cc164211c1cf30627f7d9e8fdd981f85f864dbdf793b528eea57e38a40f5e2a1f3abecbe0801e7472f87cc60260c6cb9464e6ceea47078663ec2801b57f9dfd7cda0efc6d4c419448bf6cf0c59343128d8d4aab4776012d1fd1dfcf0fd282ba59c984b398aa00a8f0d5273f47fb1703c8d14e6006694c092fb25ef7b904bd7ae6c261dcd11a5888ccba119004814fcbdb6d1268bd5530bf060258295a26a74b5ebc3758bcecf056ee8e4fb238e386d689f8b368f5c0150a00dcbdda8419d5abe59d0baaf5fd518b4f1e8aa161a17e831e15c73a33e7969a9ea8e463e212918fc615ee9e3105ff44e0313225c15d8a21d4aa796828379684003f7242466caee054267a842e8de186c237362e62f90713b58e327908c5f7a102c88b8d0c8b41a6cfccf7b2f7d6d6cd25c50d8c153b7c2d376a595cf79ec9aece32dfcbf5aa6187396da028ee5d36dcb23f5c8b43da69e13351361d7d9ba9c30c1d76c73dd52d2df9487edfd9d2b268b75a0e3aa740362d02625dd372bf6b6bf44de0cb3bb6c282fcf051f922d78e33d4619ffb159e28038f9657bba268be38b1b9a0cf97b3f09f6c071cb6aff4e9303fcdf02e60e4081ba9fa0c8cdcc4dde90f1dedb5570a53a22a77a92e4c6f7294cf2879ad5304247f884ffe8ec4c3b885e202a42759388a622f21dedb132a92b054d696303a75d3f1fff653663d84e0324bba3852ca9398cafa42c3f9a4b0c3bb934769db6198a9691276df03235e273f75fe143456cc6015164277ad56780521db1d3b856f0b23c1cd4535b7633aab11da022cd1e294798c5049bb140f69f7c66750ced472d288f1c7c4673a540ea2063833c2a5809edd4f1d21525b1a603c30cc5c0006deb7d66b4b509aa17578fd5d4ad0761e39f903ab2e80d316b83d2d593ad024843fa74b05f90b0226f6ccdc5dda11ae1e9e2be803e3c75a2c5a715275fef39f4c04df274775aa4cabcd988b1e9f9f3e097a8f1e17ee92040f17836f7006d9086f2b31d2c954fff40eda87783c2cc5fcb61ee128fc368477234deb1c74510732271ae7f235bfd9909c05565f7625c592f91e20a70e4f27f235f1f02989100b4c46f32644f773b9f0577beb33975bbaf7a2926aff064c7b4ca43ca62b6afef6e650183ec2e9f34c0c65a8915102f1176f8af278d9005cc25ca7767c93bc4c3cc9315855871166d820dda88df1febed93c1ad558759d11af3e0b438b92362cc47971ea8874c9affab79c50c8ddcd722d49a0139365a3fdc3bfc21401f17bc1ba696eb3f82978800a8bb4958f89353383d5b85b6652ffbc4b367400e503dbe86574e0946842bc2d0290f70feeac6a5b956b007409503e106779ecf731ee2d9f683ec7c162d36a8ad9c5f504efec6d1c137faa6d9d7</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>June Schedule</title>
      <link href="/2023/06/01/6-1-diary/"/>
      <url>/2023/06/01/6-1-diary/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="5d3070c45f9d67b16889e41c254ef72a1c98ef768a5794e8b872b104c5369a95">1ae9fe665b01d0dcd85b0098a19b5bf9f254f684d18a762a1a26a951f94a7d1d00b18154717c8080bb63c0c07c562a58e33f8bca2331d05770bd1b6997fd05352e691a518a18c9557cfd94945d2a7ccb04f65b0d2aee504a843b6cedb4e60beddb69461a9e53687abcec7889477777d2d118cff51fc48b73a624189f5b25ce9479c73f2660f9274843251b9a543959dde994345230c28222124233d10a0cb6ff1f49cdb3a10d93970266946f9305d910588f797352f71592d43f2c5725882108c77248e3542badb50cd36c39221436e820214d77afbffc4b5f1ea39c7b7c9452d9fde4177d6f6d742745c024da0636ee98f746ab9f9b819074bb575398538a1ff43745aec0f87fa8da5d0817a7203a2dff834b525024af6c85f6dd626198d2274244439dee17e10f6c94c01764120922d1efc1b08b20383cb34a361d0da0ec2aed6a44986e2e7abc4add613fcb1dc5285827a62ed7f791fb9cece22f8197d9dba1551107712bd9b7a70ae16ce50c516308fd554462913d60f51a640171286c034b2956a17f9c6848bfee70ee87c9b0cf626e51bae7cc31401d97d592857a0014dcd2c834a4758023d496ec76178adf94ae546746a4e0f836ac41c40f449a1281f6a14a18888d8930d311918a7687f13f64797e679cbf1c36b4bec25fd5001850de783ec433495eb7173ecdd7f17d9182f2a2d7b3def705282b1b130b8e5e8154486eb9468fd0053da1f124005db366e5af719d5236eff13a1bc646d1180b08cb644e7911b3a2dd5d4d37453a99f18984ca5f5b518b3a547669f106fa5d50ad24837a60b2e310c05b3471f0e000e8ffa98216e5c874c81c25b349847163f5315403e54b8435d5ba5dc4c2e4a8c12d4d3e52fd7f0628769b4d74fe01cc68e48c2af9682334634557174ae2cbfb7689725f3cc5ed0d5b883048225fd583219979c0a9d3b8847f60f96ac7e10726526d217e2a9b02ac78bbf32f100b44357dccebec46fcff220ab395b4353b6f0227175cae497a95f216cfa16abecb41d0ebd8b70065c427a1f07e7ee6a27bc7b4189498ced2c258b0d073c2ec2839b81ee5bda750334316b92913fefee39724522e3b26ad07b198b9b7b9944ac083cedc0f14560fdc5a3f8a6cabb2f3825d26442bfc61d9f5d9500baea47e358d0a5f21690838f4c3e732a3b726749f81e3508b8e3a17ad6054b75a6715080ee6f2501bc5d876d37714de47f17e1a5734d108f4c8e7e804512d416feed32f481d9f074bc9f25ca6f44ac80c831dba9604dfe18399280be04b9e3305a0f549f4e3b3af33f9b7b5bac214c5573cc7fdd8030a7df2b41dac7f961fe1538e78648b89785c6a1b7ead0207b7284ab1a7a3d1c1df9fba99bc9730d7c65f3640d69aa052104954a93d7f586d5e8dee57125e26c5e4049a9e1cc8c48b38a8fa0cd3cf948dfc7253a69a0f66ee9c421082f8d8b6cc1d0126fbc0e145e5669e669eb5131ebf106541693c92c40a6e397dcb2424a2fea3a036f43f75921377952f47bae8de2f6673ff4821cb76620fa615930d99f7e4051eff30cb71f7a40f67aa49a0d8588389242c30d0864ef568f1a90522a63b2ad62ddf634b75048433a388dfaa755ee821833997144dae5d8cdef00ba199abe195e81c02ffb1ae8ddfd84c4996d9a093bf50169b6de227811950eb07a1377bdf34abe96be391e3f5c9d4e11af8a33d73f3186a92ff922b3fe1639c78e2d7d3add0d4b4aa43db188059d204c36bd0dc123ad921ce4b60188f4c48dfebeb4caf5f7d3c7b257b3ec0e37f82496da47d85e6c3514d54e45a849cf04ea3d42be1902580bc40641643c18409653aada87adeda513783b1539949885cb940aeef7ef56a8d5f783dc4bb35881ca14bead06eb8f6caf15468ec9c97347c6589f06f73422914b57b3d4f54fed2599e75a887fe0ef52d67b1ea126a59344cab1112ab211c94a4ff245e80dbd084739b1880b49263e442bec5b129364ed992a6954947c46cf0e48c8855e91e08cda65dec60dbee40cacd1b8ab9cd1be023e155b09b305a2d7ffa3d5aaed489e9a086bc6b26bb081b53ad5cb2aaf20ae5cca30a2460b7cf9b14abea69b60508885a677d5202b01b76341003b6fddcf852ebb2cabc4c41319d0f7d54f526fd4fadfc8d66ad2244cdd431269fb8bc54524b54ce003be95301d7848e1c9f2dc051f2ef9f08ba18aa20358c50c06ebcaf1e4d987c809ffa4c69cbad40e4473eba33e9</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6-1-my-paper</title>
      <link href="/2023/06/01/6-1-my-paper/"/>
      <url>/2023/06/01/6-1-my-paper/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="5bc4d545aeadb3c132280a05a805368b61f12d88460c555dfe26e5fe1e215504">1ae9fe665b01d0dcd85b0098a19b5bf9e9b2336f4379f174705b798cc6b51010</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创建新的Hexo-Blog主题构想</title>
      <link href="/2023/05/19/5-19-%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E6%9E%84%E6%83%B3/"/>
      <url>/2023/05/19/5-19-%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E6%9E%84%E6%83%B3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="24742287167be156b44b7a9119e65bc761da70dc633219372abd5c9b1cfb67ff"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Array 3:Squares of a Sorted Array</title>
      <link href="/2023/05/14/5-14-array-3-squares-of-a-sorted-array/"/>
      <url>/2023/05/14/5-14-array-3-squares-of-a-sorted-array/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#head1">977. 有序数组的平方</a><ul><li><a href="#head2"> NOTE</a></li><li><a href="#head3">c++ solution</a></li><li><a href="#head4">java solution</a></li><li><a href="#head5">improved solution</a></li></ul></li></ul><h1 id="977-有序数组的平方"><a href="#977-有序数组的平方" class="headerlink" title="977. 有序数组的平方"></a><span id="head1"><a href="https://leetcode.cn/problems/squares-of-a-sorted-array/description/">977. 有序数组的平方</a></span></h1><p><img src="/2023/05/14/5-14-array-3-squares-of-a-sorted-array/img.png" alt="977"></p><h2 id="NOTE"><a href="#NOTE" class="headerlink" title=" NOTE"></a><span id="head2"> NOTE</span></h2><p>原本自己读完题想着要先挨个平方完，然后快排（没错本人就是这么垃圾:sob:）这样的话，是复杂度是O(n+nlogn)，<br>绝对超过了O(n)。之后看到了提示说用双指针，就恍然大悟：①遍历数组找到正负分界点②从这个点向两端依次确定<br>最小值，直到有一侧达到尽头③处理剩下的数组。写完之后，发现卡哥的思路：从数组两端向中间聚拢，以此确定最大值，<br>这样省了找分界点和处理剩下元素的时间，respect！！</p><h2 id="c-solution"><a href="#c-solution" class="headerlink" title="c++ solution"></a><span id="head3">c++ solution</span></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sortedSquares</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ans</span><span class="params">(nums.size())</span></span>;</span><br><span class="line">        <span class="type">int</span> FLAG=<span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> r=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(nums[r]&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            r++;</span><br><span class="line">            <span class="keyword">if</span>(r&gt;=nums.<span class="built_in">size</span>())<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> l=r<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">if</span>(l&lt;<span class="number">0</span>||r&gt;=nums.<span class="built_in">size</span>())FLAG=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> idx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(FLAG&amp;&amp;idx&lt;nums.<span class="built_in">size</span>())&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[l]*(<span class="number">-1</span>)&lt;nums[r])&#123;</span><br><span class="line">                ans[idx]=nums[l]*nums[l];</span><br><span class="line">                l--;</span><br><span class="line">                <span class="keyword">if</span>(l&lt;<span class="number">0</span>)FLAG=<span class="number">0</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                ans[idx]=nums[r]*nums[r];</span><br><span class="line">                r++;</span><br><span class="line">                <span class="keyword">if</span>(r&gt;=nums.<span class="built_in">size</span>())FLAG=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            idx++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(FLAG==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(l&lt;<span class="number">0</span>)&#123;<span class="comment">//剩下右边</span></span><br><span class="line">                <span class="keyword">while</span>(idx&lt;nums.<span class="built_in">size</span>()&amp;&amp;r&lt;nums.<span class="built_in">size</span>())&#123;</span><br><span class="line">                    ans[idx]=nums[r]*nums[r];</span><br><span class="line">                    idx++;</span><br><span class="line">                    r++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 <span class="keyword">while</span>(idx&lt;nums.<span class="built_in">size</span>()&amp;&amp;l&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">                    ans[idx]=nums[l]*nums[l];</span><br><span class="line">                    idx++;</span><br><span class="line">                    l--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="java-solution"><a href="#java-solution" class="headerlink" title="java solution"></a><span id="head4">java solution</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] sortedSquares(<span class="type">int</span>[] nums) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> len=nums.length;</span><br><span class="line">        <span class="type">int</span>[]ans=<span class="keyword">new</span> <span class="title class_">int</span>[len];</span><br><span class="line">        <span class="type">int</span> FLAG=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> r=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(nums[r]&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            r++;</span><br><span class="line">            <span class="keyword">if</span>(r&gt;=len)&#123;</span><br><span class="line">                FLAG=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> l=r-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(l&lt;<span class="number">0</span>) FLAG=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> idx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(FLAG==<span class="number">1</span>&amp;&amp;idx&lt;len)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(nums[l]*(-<span class="number">1</span>)&lt;nums[r])&#123;</span><br><span class="line">                ans[idx]=nums[l]*nums[l];</span><br><span class="line">                l--;</span><br><span class="line">                <span class="keyword">if</span>(l&lt;<span class="number">0</span>)FLAG=<span class="number">0</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                ans[idx]=nums[r]*nums[r];</span><br><span class="line">                r++;</span><br><span class="line">                <span class="keyword">if</span>(r&gt;=len)FLAG=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            idx++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(FLAG==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(l&lt;<span class="number">0</span>)&#123;<span class="comment">//只剩右边</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span>(idx&lt;len&amp;&amp;r&lt;len)&#123;</span><br><span class="line">                    ans[idx]=nums[r]*nums[r];</span><br><span class="line">                    idx++;</span><br><span class="line">                    r++;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">while</span>(idx&lt;len&amp;&amp;l&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">                    ans[idx]=nums[l]*nums[l];</span><br><span class="line">                    idx++;</span><br><span class="line">                    l--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="improved-solution"><a href="#improved-solution" class="headerlink" title="improved solution"></a><span id="head5">improved solution</span></h2><p>显然代码短了很多</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sortedSquares</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span></span>&#123;</span><br><span class="line">        <span class="type">int</span> len = nums.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt;<span class="built_in">ans</span>(len);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> l=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> r=len<span class="number">-1</span>;</span><br><span class="line">        <span class="type">int</span> idx=len<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(idx&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[l]*nums[l]&gt;nums[r]*nums[r])&#123;</span><br><span class="line">                ans[idx]=nums[l]*nums[l];</span><br><span class="line">                l++;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                ans[idx]=nums[r]*nums[r];</span><br><span class="line">                r--;</span><br><span class="line">            &#125;</span><br><span class="line">            idx--;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm training </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>5/13随笔</title>
      <link href="/2023/05/13/5-13-%E9%9A%8F%E7%AC%94/"/>
      <url>/2023/05/13/5-13-%E9%9A%8F%E7%AC%94/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="ae8d272d11f8fe1f670267bd695a4799b59dc8eb61122cd91b1bde8eb1253db6">1ae9fe665b01d0dcd85b0098a19b5bf9e27bcfddc6786c03cad17df8dde8408a839d4747bcfd45610228e9e2dcf3b73fcba300e82405ad4781f271fa6a77bff224772b838a9ec6a1da36a16214f50d0ca241683f57595afcaf4fde34f6845a73b0fd1c771fa138c564a045e8f9a9821753003ff621dae40cb9d0715a10347e3af71bef9354887739143055a34b44cf305ea5f3eb26d6ad5f8ab68914c800f9a6</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Array 2:Remove Element</title>
      <link href="/2023/05/11/5-11-array-2-remove-element/"/>
      <url>/2023/05/11/5-11-array-2-remove-element/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#head1"><strong>27. 移除元素</strong></a><ul><li><a href="#head2">C++ solution</a></li><li><a href="#head3">Java solution</a></li></ul></li><li><a href="#head4"><strong>26. 删除有序数组中的重复项</strong></a><ul><li><a href="#head5">C++ solution</a></li><li><a href="#head6">Java solution</a></li></ul></li></ul><h1 id="27-移除元素"><a href="#27-移除元素" class="headerlink" title="27. 移除元素"></a><span id="head1"><a href="https://leetcode.cn/problems/remove-element/"><strong>27. 移除元素</strong></a></span></h1><p><img src="/2023/05/11/5-11-array-2-remove-element/1.png" alt="27"></p><h2 id="C-solution"><a href="#C-solution" class="headerlink" title="C++ solution"></a><span id="head2">C++ solution</span></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">removeElement</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> val)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="type">int</span> cur_index =<span class="number">0</span>;</span><br><span class="line">       <span class="type">int</span> length=nums.<span class="built_in">size</span>();</span><br><span class="line">       <span class="type">int</span> last_index=length<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span>(length==<span class="number">1</span>&amp;&amp;nums[<span class="number">0</span>]==val)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">while</span>(cur_index&lt;length)&#123;</span><br><span class="line">           <span class="keyword">if</span>(nums[cur_index]==val)&#123;</span><br><span class="line">               <span class="keyword">while</span>(nums[last_index]==val)&#123;</span><br><span class="line">                   length--;</span><br><span class="line">                   <span class="keyword">if</span>(length==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    last_index=length<span class="number">-1</span>;</span><br><span class="line">                    </span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">if</span>(cur_index&lt;last_index)&#123;</span><br><span class="line">                    <span class="type">int</span> t=nums[last_index];</span><br><span class="line">                    nums[last_index]=nums[cur_index];</span><br><span class="line">                    nums[cur_index]=t;</span><br><span class="line">               &#125;</span><br><span class="line">               </span><br><span class="line">           &#125;</span><br><span class="line">           cur_index++;</span><br><span class="line">       &#125;</span><br><span class="line">         </span><br><span class="line"><span class="keyword">return</span> length;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Java-solution"><a href="#Java-solution" class="headerlink" title="Java solution"></a><span id="head3">Java solution</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removeElement</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">      </span><br><span class="line">      <span class="type">int</span> cur=<span class="number">0</span>;</span><br><span class="line">      <span class="type">int</span> length=nums.length;</span><br><span class="line">      <span class="type">int</span> last=length-<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>(length==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">while</span>(cur&lt;length)&#123;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span>(nums[cur]==val)&#123;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">while</span>(nums[last]==val)&#123;</span><br><span class="line">                    length--;</span><br><span class="line">                    <span class="keyword">if</span>(length==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    last=length-<span class="number">1</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span>(cur&lt;last)&#123;</span><br><span class="line">                  <span class="type">int</span> t=nums[cur];</span><br><span class="line">                  nums[cur]=nums[last];</span><br><span class="line">                  nums[last]=t;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          cur++;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> length;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="26-删除有序数组中的重复项"><a href="#26-删除有序数组中的重复项" class="headerlink" title="26. 删除有序数组中的重复项"></a><span id="head4"><a href="https://leetcode.cn/problems/remove-duplicates-from-sorted-array/"><strong>26. 删除有序数组中的重复项</strong></a></span></h1><p><img src="/2023/05/11/5-11-array-2-remove-element/2.png" alt="26"></p><h2 id="C-solution-1"><a href="#C-solution-1" class="headerlink" title="C++ solution"></a><span id="head5">C++ solution</span></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">removeDuplicates</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> cur=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> next=cur+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">size</span>()==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(cur&lt;=nums.<span class="built_in">size</span>()<span class="number">-1</span>)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(next&lt;nums.<span class="built_in">size</span>()&amp;&amp;nums[next]==nums[cur])next++;</span><br><span class="line">            cur++;</span><br><span class="line">            <span class="keyword">if</span>(cur&gt;=nums.<span class="built_in">size</span>()||next&gt;=nums.<span class="built_in">size</span>())<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            nums[cur]=nums[next];</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cur;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Java-solution-1"><a href="#Java-solution-1" class="headerlink" title="Java solution"></a><span id="head6">Java solution</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removeDuplicates</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> cur=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> next=cur+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(nums.length==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(cur&lt;=nums.length-<span class="number">1</span>)&#123;</span><br><span class="line">           </span><br><span class="line">            <span class="keyword">while</span>(next&lt;nums.length&amp;&amp;nums[next]==nums[cur])next++;</span><br><span class="line">            cur++;</span><br><span class="line">            <span class="keyword">if</span>(cur==nums.length||next==nums.length)<span class="keyword">break</span>;</span><br><span class="line">            nums[cur]=nums[next];</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> cur;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm training </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Array 1:Binary Search</title>
      <link href="/2023/05/10/5-10-array-1-binary-search/"/>
      <url>/2023/05/10/5-10-array-1-binary-search/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="Ⅰ-704-二分查找"><a href="#Ⅰ-704-二分查找" class="headerlink" title=" Ⅰ 704 二分查找 "></a><span id="head1"> <strong><a href="https://leetcode.cn/problems/binary-search/">Ⅰ 704 二分查找</a></strong> </span></h1><p><img src="/2023/05/10/5-10-array-1-binary-search/1.png" alt="704"></p><h2 id="NOTE"><a href="#NOTE" class="headerlink" title=" NOTE"></a><span id="head2"> NOTE</span></h2><h3 id="1-每次写二分最容易纠结的part就是下面C-代码里面的A-B-C-D行"><a href="#1-每次写二分最容易纠结的part就是下面C-代码里面的A-B-C-D行" class="headerlink" title="1. 每次写二分最容易纠结的part就是下面C++代码里面的A,B,C,D行"></a><span id="head3">1. 每次写二分最容易纠结的part就是下面C++代码里面的A,B,C,D行</span></h3><ul><li>A 处是用nums.size()-1还是nums.size()?</li><li>B 处是 &lt;&#x3D; 还是 &lt; ?</li><li>C 处是 mid 还是 mid - 1 ?</li><li>D 处是 mid 还是 mid + 1 ?</li></ul><p>实际上这些不同的本质实际上是对于数组区间的划分法不同：</p><table><thead><tr><th></th><th>左闭右闭区间</th><th>左闭右开区间</th></tr></thead><tbody><tr><td>A</td><td><code>high=nums.size()-1</code></td><td><code>high=nums.size()</code></td></tr><tr><td>B</td><td><code> while(low&lt;=high)</code></td><td><code> while(low&lt;high)</code></td></tr><tr><td>C</td><td><code> high=mid-1;</code></td><td><code> high=mid;</code></td></tr><tr><td>D</td><td><code>low=mid+1;</code></td><td><code>low=mid+1;</code></td></tr></tbody></table><h3 id="2-二分法取中间值防溢出"><a href="#2-二分法取中间值防溢出" class="headerlink" title="2. 二分法取中间值防溢出"></a><span id="head4">2. 二分法取中间值防溢出</span></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mid = (low+high) / <span class="number">2</span></span><br></pre></td></tr></table></figure><p>E 处的写法在两大数相加的时候容易发生溢出，可以改成下面的写法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mid = low + (( high - low ) / <span class="number">2</span>)</span><br></pre></td></tr></table></figure><h2 id="C-solution"><a href="#C-solution" class="headerlink" title="C++ solution"></a><span id="head5">C++ solution</span></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> </span></span><br><span class="line"><span class="function">    <span class="type">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*A*/</span>   <span class="type">int</span> low=<span class="number">0</span>,high=nums.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*B*/</span>   <span class="keyword">while</span>(low&lt;=high)&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*E*/</span>        <span class="type">int</span> mid=(low+high)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(target==nums[mid])&#123;</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(target&lt;nums[mid])&#123;</span><br><span class="line"><span class="comment">/*C*/</span>           high=mid<span class="number">-1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">/*D*/</span>           low=mid+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Java-solution"><a href="#Java-solution" class="headerlink" title="Java solution"></a><span id="head6">Java solution</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> low=<span class="number">0</span>,high=nums.length-<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(low&lt;=high)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> mid=(low+high)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(nums[mid]==target)&#123;</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums[mid]&gt;=target)&#123;</span><br><span class="line">                high=mid-<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                low=mid+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Ⅱ-35-搜索插入位置"><a href="#Ⅱ-35-搜索插入位置" class="headerlink" title="Ⅱ  35. 搜索插入位置"></a><span id="head7"><strong><a href="https://leetcode.cn/problems/search-insert-position/">Ⅱ  35. 搜索插入位置</a></strong></span></h1><p><img src="/2023/05/10/5-10-array-1-binary-search/2.png" alt="35"></p><h2 id="C-solution-1"><a href="#C-solution-1" class="headerlink" title="C++ solution"></a><span id="head8">C++ solution</span></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">searchInsert</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> low =<span class="number">0</span>,high=nums.<span class="built_in">size</span>()<span class="number">-1</span>,mid,ans=nums.<span class="built_in">size</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(low&lt;=high)&#123;</span><br><span class="line"></span><br><span class="line">            mid =(low+high)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(target&lt;=nums[mid])&#123;<span class="comment">//在左边 </span></span><br><span class="line">            ans=mid;</span><br><span class="line">                high=mid<span class="number">-1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                low=mid+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Java-solution-1"><a href="#Java-solution-1" class="headerlink" title="Java solution"></a><span id="head9">Java solution</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">searchInsert</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">low</span> <span class="operator">=</span> <span class="number">0</span>, high = nums.length-<span class="number">1</span>, ans = nums.length;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(low&lt;=high)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> ( low + high ) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(target &lt;= nums[mid])&#123;<span class="comment">// 在左边</span></span><br><span class="line"></span><br><span class="line">                ans = mid;</span><br><span class="line"></span><br><span class="line">                high = mid-<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                low = mid +<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">return</span> ans;   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Ⅲ-34-在排序数组中查找元素的第一个和最后一个位置"><a href="#Ⅲ-34-在排序数组中查找元素的第一个和最后一个位置" class="headerlink" title=" Ⅲ 34. 在排序数组中查找元素的第一个和最后一个位置"></a><span id="head10"><a href="https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array/"> <strong>Ⅲ 34. 在排序数组中查找元素的第一个和最后一个位置</strong></a></span></h1><p><img src="/2023/05/10/5-10-array-1-binary-search/3.png" alt="34"></p><h2 id="NOTE-1"><a href="#NOTE-1" class="headerlink" title=" NOTE"></a><span id="head11"> NOTE</span></h2><h3 id="1-使用二分法在有序数组中查找某个数的左边界，即某个数第一次出现的位置"><a href="#1-使用二分法在有序数组中查找某个数的左边界，即某个数第一次出现的位置" class="headerlink" title="1. 使用二分法在有序数组中查找某个数的左边界，即某个数第一次出现的位置"></a><span id="head12">1. 使用二分法在有序数组中查找某个数的左边界，即某个数第一次出现的位置</span></h3><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  graph LRA[Start] --&gt; B{empty?}B -- yes --&gt; C[end]B -- no --&gt; D[ left border &#x3D; 0 &lt;br&gt; right border &#x3D; length-1 &lt;br&gt; ]D --&gt; F{target &lt;&#x3D; the middle element of array ?}F -- yes --&gt; G[the left border must in the left half,&lt;br&gt; so search the left half]G --&gt; I[right border &#x3D; middle ]F -- no --&gt; H[the left border must in the right half,&lt;br&gt; so search the right half] H --&gt; J[left border &#x3D; mid + 1]I --&gt; K{left border &gt;&#x3D; right vorder?}J --&gt; KK --yes--&gt; L{ the element of left border &#x3D; target?}K --no--&gt; FL --yes--&gt; M[found the left border]L --no--&gt; C  </pre></div><h3 id="2-使用二分法在有序数组中查找某个数的右边界，即某个数最后一次出现的位置"><a href="#2-使用二分法在有序数组中查找某个数的右边界，即某个数最后一次出现的位置" class="headerlink" title="2. 使用二分法在有序数组中查找某个数的右边界，即某个数最后一次出现的位置"></a><span id="head13">2. 使用二分法在有序数组中查找某个数的右边界，即某个数最后一次出现的位置</span></h3><p>与查找左边界不同的一个关键点有计算mid的时候需要l+r+1！<br>否则会陷入死循环</p><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  graph LRa[start] --&gt; b{empty?}b --yes--&gt; c[end]b --no--&gt; d[left border &#x3D; 0&lt;br&gt;right border &#x3D;lenth-1]d --&gt; e{target &gt;&#x3D; the middle element of the array &lt;font color&#x3D;red&gt;+1!&lt;&#x2F;font&gt;?}e --yes--&gt; f[search the right half]e -- no--&gt; g[search the left half]f--&gt; h{ l&gt;&#x3D;r? }g--&gt;hh--yes--&gt;eh--no--&gt;i{the element of right border &#x3D;&#x3D; target?}i--yes--&gt;j[found the right border]i--no--&gt;c  </pre></div><h2 id="C-solution-2"><a href="#C-solution-2" class="headerlink" title="C++ solution"></a><span id="head14">C++ solution</span></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">searchRange</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> left = <span class="built_in">binarySearch</span>(nums,target,<span class="literal">true</span>);</span><br><span class="line">        <span class="type">int</span> right =  <span class="built_in">binarySearch</span>(nums,target,<span class="literal">false</span>)<span class="number">-1</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(left &lt;= right &amp;&amp; right &lt; nums.<span class="built_in">size</span>() &amp;&amp; nums[left] == target &amp;&amp; nums[right] == target)&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> vector&lt;<span class="type">int</span>&gt;&#123;left,right&#125;;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> vector&lt;<span class="type">int</span>&gt;&#123;<span class="number">-1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">binarySearch</span><span class="params">(vector&lt;<span class="type">int</span>&gt;nums,<span class="type">int</span> target,<span class="type">bool</span> isLeft)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> low =<span class="number">0</span>,high=nums.<span class="built_in">size</span>()<span class="number">-1</span>,mid,ans=nums.<span class="built_in">size</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(low&lt;=high)&#123;</span><br><span class="line">    </span><br><span class="line">    mid=(low+high)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(target&lt;nums[mid]||isLeft&amp;&amp;target&lt;=nums[mid])&#123;</span><br><span class="line">    ans = mid;</span><br><span class="line">    high = mid - <span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">low = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Java-solution-2"><a href="#Java-solution-2" class="headerlink" title="Java solution"></a><span id="head15">Java solution</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] searchRange(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">      <span class="type">int</span> [] arr=&#123;-<span class="number">1</span>,-<span class="number">1</span>&#125;;</span><br><span class="line"><span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> binarySearch(nums, target, <span class="literal">true</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> binarySearch(nums, target, <span class="literal">false</span>)-<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(left&lt;=right &amp;&amp; right&lt;nums.length &amp;&amp; nums[left] == target &amp;&amp; nums[right] == target)&#123;</span><br><span class="line">arr[<span class="number">0</span>]=left;</span><br><span class="line">arr[<span class="number">1</span>]=right;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> arr;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">binarySearch</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target, <span class="type">boolean</span> isLeft)</span>&#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">low</span> <span class="operator">=</span> <span class="number">0</span>, high = nums.length-<span class="number">1</span>, mid, ans = nums.length;</span><br><span class="line"><span class="keyword">while</span>(low&lt;=high)&#123;</span><br><span class="line">mid=(low+high)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(target &lt; nums[mid]|| isLeft &amp;&amp; target &lt;= nums[mid])&#123;</span><br><span class="line">ans = mid;</span><br><span class="line">high = mid - <span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">low = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm training </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
