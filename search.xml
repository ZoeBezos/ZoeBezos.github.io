<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Array 3:squares-of-a-sorted-array</title>
      <link href="/2023/05/14/5-14-array-3%20squares-of-a-sorted-array/"/>
      <url>/2023/05/14/5-14-array-3%20squares-of-a-sorted-array/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#head1">977. 有序数组的平方</a><ul><li><a href="#head2"> NOTE</a></li><li><a href="#head3">c++ solution</a></li><li><a href="#head4">java solution</a></li><li><a href="#head5">improved solution</a></li></ul></li></ul><h1 id="977-有序数组的平方"><a href="#977-有序数组的平方" class="headerlink" title="977. 有序数组的平方"></a><span id="head1"><a href="https://leetcode.cn/problems/squares-of-a-sorted-array/description/">977. 有序数组的平方</a></span></h1><p><img src="/2023/05/14/5-14-array-3%20squares-of-a-sorted-array/img.png" alt="977"></p><h2 id="NOTE"><a href="#NOTE" class="headerlink" title=" NOTE"></a><span id="head2"> NOTE</span></h2><p>原本自己读完题想着要先挨个平方完，然后快排（没错本人就是这么垃圾:sob:）这样的话，是复杂度是O(n+nlogn)，<br>绝对超过了O(n)。之后看到了提示说用双指针，就恍然大悟：①遍历数组找到正负分界点②从这个点向两端依次确定<br>最小值，直到有一侧达到尽头③处理剩下的数组。写完之后，发现卡哥的思路：从数组两端向中间聚拢，以此确定最大值，<br>这样省了找分界点和处理剩下元素的时间，respect！！</p><h2 id="c-solution"><a href="#c-solution" class="headerlink" title="c++ solution"></a><span id="head3">c++ solution</span></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sortedSquares</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ans</span><span class="params">(nums.size())</span></span>;</span><br><span class="line">        <span class="type">int</span> FLAG=<span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> r=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(nums[r]&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            r++;</span><br><span class="line">            <span class="keyword">if</span>(r&gt;=nums.<span class="built_in">size</span>())<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> l=r<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">if</span>(l&lt;<span class="number">0</span>||r&gt;=nums.<span class="built_in">size</span>())FLAG=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> idx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(FLAG&amp;&amp;idx&lt;nums.<span class="built_in">size</span>())&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[l]*(<span class="number">-1</span>)&lt;nums[r])&#123;</span><br><span class="line">                ans[idx]=nums[l]*nums[l];</span><br><span class="line">                l--;</span><br><span class="line">                <span class="keyword">if</span>(l&lt;<span class="number">0</span>)FLAG=<span class="number">0</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                ans[idx]=nums[r]*nums[r];</span><br><span class="line">                r++;</span><br><span class="line">                <span class="keyword">if</span>(r&gt;=nums.<span class="built_in">size</span>())FLAG=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            idx++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(FLAG==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(l&lt;<span class="number">0</span>)&#123;<span class="comment">//剩下右边</span></span><br><span class="line">                <span class="keyword">while</span>(idx&lt;nums.<span class="built_in">size</span>()&amp;&amp;r&lt;nums.<span class="built_in">size</span>())&#123;</span><br><span class="line">                    ans[idx]=nums[r]*nums[r];</span><br><span class="line">                    idx++;</span><br><span class="line">                    r++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 <span class="keyword">while</span>(idx&lt;nums.<span class="built_in">size</span>()&amp;&amp;l&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">                    ans[idx]=nums[l]*nums[l];</span><br><span class="line">                    idx++;</span><br><span class="line">                    l--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="java-solution"><a href="#java-solution" class="headerlink" title="java solution"></a><span id="head4">java solution</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] sortedSquares(<span class="type">int</span>[] nums) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> len=nums.length;</span><br><span class="line">        <span class="type">int</span>[]ans=<span class="keyword">new</span> <span class="title class_">int</span>[len];</span><br><span class="line">        <span class="type">int</span> FLAG=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> r=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(nums[r]&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            r++;</span><br><span class="line">            <span class="keyword">if</span>(r&gt;=len)&#123;</span><br><span class="line">                FLAG=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> l=r-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(l&lt;<span class="number">0</span>) FLAG=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> idx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(FLAG==<span class="number">1</span>&amp;&amp;idx&lt;len)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(nums[l]*(-<span class="number">1</span>)&lt;nums[r])&#123;</span><br><span class="line">                ans[idx]=nums[l]*nums[l];</span><br><span class="line">                l--;</span><br><span class="line">                <span class="keyword">if</span>(l&lt;<span class="number">0</span>)FLAG=<span class="number">0</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                ans[idx]=nums[r]*nums[r];</span><br><span class="line">                r++;</span><br><span class="line">                <span class="keyword">if</span>(r&gt;=len)FLAG=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            idx++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(FLAG==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(l&lt;<span class="number">0</span>)&#123;<span class="comment">//只剩右边</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span>(idx&lt;len&amp;&amp;r&lt;len)&#123;</span><br><span class="line">                    ans[idx]=nums[r]*nums[r];</span><br><span class="line">                    idx++;</span><br><span class="line">                    r++;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">while</span>(idx&lt;len&amp;&amp;l&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">                    ans[idx]=nums[l]*nums[l];</span><br><span class="line">                    idx++;</span><br><span class="line">                    l--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="improved-solution"><a href="#improved-solution" class="headerlink" title="improved solution"></a><span id="head5">improved solution</span></h2><p>显然代码短了很多</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sortedSquares</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span></span>&#123;</span><br><span class="line">        <span class="type">int</span> len = nums.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt;<span class="built_in">ans</span>(len);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> l=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> r=len<span class="number">-1</span>;</span><br><span class="line">        <span class="type">int</span> idx=len<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(idx&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[l]*nums[l]&gt;nums[r]*nums[r])&#123;</span><br><span class="line">                ans[idx]=nums[l]*nums[l];</span><br><span class="line">                l++;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                ans[idx]=nums[r]*nums[r];</span><br><span class="line">                r--;</span><br><span class="line">            &#125;</span><br><span class="line">            idx--;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm training </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>5/13随笔</title>
      <link href="/2023/05/13/5-13%E9%9A%8F%E7%AC%94/"/>
      <url>/2023/05/13/5-13%E9%9A%8F%E7%AC%94/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="8ed0d088ca926d62d20355582e2a01b147684221279f9fabb1fbddb0ae0dc679">34a23409a6334b365ea8ba791c6a22f1fbe435e06a82d257dfd25a22f105abc727735ef8a35cdcd092e5cca5ed12698723db5600326fcbba6af4251edd8fa2cf7d7c5b3fc383c40ebd251b3755314a6efaff79dc40d9538dd9776b7c737d0eee4c3d9715c0aa439d486a5f172dc09f407b2458b2b1aed7cd66f1387fd794143c1fd7722e044f4033ea8e0bd51cf6c9218d383f7677d08a20e0a1cdfd59c70044</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> diary </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Array 2:Remove Element</title>
      <link href="/2023/05/11/5-11-array-2%20remove-element/"/>
      <url>/2023/05/11/5-11-array-2%20remove-element/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#head1"><strong>27. 移除元素</strong></a><ul><li><a href="#head2">C++ solution</a></li><li><a href="#head3">Java solution</a></li></ul></li><li><a href="#head4"><strong>26. 删除有序数组中的重复项</strong></a><ul><li><a href="#head5">C++ solution</a></li><li><a href="#head6">Java solution</a></li></ul></li></ul><h1 id="27-移除元素"><a href="#27-移除元素" class="headerlink" title="27. 移除元素"></a><span id="head1"><a href="https://leetcode.cn/problems/remove-element/"><strong>27. 移除元素</strong></a></span></h1><p><img src="/2023/05/11/5-11-array-2%20remove-element/1.png" alt="27"></p><h2 id="C-solution"><a href="#C-solution" class="headerlink" title="C++ solution"></a><span id="head2">C++ solution</span></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">removeElement</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> val)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="type">int</span> cur_index =<span class="number">0</span>;</span><br><span class="line">       <span class="type">int</span> length=nums.<span class="built_in">size</span>();</span><br><span class="line">       <span class="type">int</span> last_index=length<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span>(length==<span class="number">1</span>&amp;&amp;nums[<span class="number">0</span>]==val)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">while</span>(cur_index&lt;length)&#123;</span><br><span class="line">           <span class="keyword">if</span>(nums[cur_index]==val)&#123;</span><br><span class="line">               <span class="keyword">while</span>(nums[last_index]==val)&#123;</span><br><span class="line">                   length--;</span><br><span class="line">                   <span class="keyword">if</span>(length==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    last_index=length<span class="number">-1</span>;</span><br><span class="line">                    </span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">if</span>(cur_index&lt;last_index)&#123;</span><br><span class="line">                    <span class="type">int</span> t=nums[last_index];</span><br><span class="line">                    nums[last_index]=nums[cur_index];</span><br><span class="line">                    nums[cur_index]=t;</span><br><span class="line">               &#125;</span><br><span class="line">               </span><br><span class="line">           &#125;</span><br><span class="line">           cur_index++;</span><br><span class="line">       &#125;</span><br><span class="line">         </span><br><span class="line"><span class="keyword">return</span> length;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Java-solution"><a href="#Java-solution" class="headerlink" title="Java solution"></a><span id="head3">Java solution</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removeElement</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">      </span><br><span class="line">      <span class="type">int</span> cur=<span class="number">0</span>;</span><br><span class="line">      <span class="type">int</span> length=nums.length;</span><br><span class="line">      <span class="type">int</span> last=length-<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>(length==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">while</span>(cur&lt;length)&#123;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span>(nums[cur]==val)&#123;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">while</span>(nums[last]==val)&#123;</span><br><span class="line">                    length--;</span><br><span class="line">                    <span class="keyword">if</span>(length==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    last=length-<span class="number">1</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span>(cur&lt;last)&#123;</span><br><span class="line">                  <span class="type">int</span> t=nums[cur];</span><br><span class="line">                  nums[cur]=nums[last];</span><br><span class="line">                  nums[last]=t;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          cur++;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> length;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="26-删除有序数组中的重复项"><a href="#26-删除有序数组中的重复项" class="headerlink" title="26. 删除有序数组中的重复项"></a><span id="head4"><a href="https://leetcode.cn/problems/remove-duplicates-from-sorted-array/"><strong>26. 删除有序数组中的重复项</strong></a></span></h1><p><img src="/2023/05/11/5-11-array-2%20remove-element/2.png" alt="26"></p><h2 id="C-solution-1"><a href="#C-solution-1" class="headerlink" title="C++ solution"></a><span id="head5">C++ solution</span></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">removeDuplicates</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> cur=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> next=cur+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">size</span>()==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(cur&lt;=nums.<span class="built_in">size</span>()<span class="number">-1</span>)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(next&lt;nums.<span class="built_in">size</span>()&amp;&amp;nums[next]==nums[cur])next++;</span><br><span class="line">            cur++;</span><br><span class="line">            <span class="keyword">if</span>(cur&gt;=nums.<span class="built_in">size</span>()||next&gt;=nums.<span class="built_in">size</span>())<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            nums[cur]=nums[next];</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cur;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Java-solution-1"><a href="#Java-solution-1" class="headerlink" title="Java solution"></a><span id="head6">Java solution</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removeDuplicates</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> cur=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> next=cur+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(nums.length==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(cur&lt;=nums.length-<span class="number">1</span>)&#123;</span><br><span class="line">           </span><br><span class="line">            <span class="keyword">while</span>(next&lt;nums.length&amp;&amp;nums[next]==nums[cur])next++;</span><br><span class="line">            cur++;</span><br><span class="line">            <span class="keyword">if</span>(cur==nums.length||next==nums.length)<span class="keyword">break</span>;</span><br><span class="line">            nums[cur]=nums[next];</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> cur;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm training </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Array 1:Binary Search</title>
      <link href="/2023/05/10/5-10-array-1%20binary-search/"/>
      <url>/2023/05/10/5-10-array-1%20binary-search/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#head1"><strong>704 二分查找</strong></a><ul><li><a href="#head2"> NOTE</a><ul><li><a href="#head3">1. 每次写二分最容易纠结的part就是下面C++代码里面的A,B,C,D行:</a></li><li><a href="#head4">2. 二分法取中间值防溢出</a></li></ul></li><li><a href="#head5">C++ solution</a></li><li><a href="#head6">Java solution</a></li></ul></li><li><a href="#head7"><strong>35. 搜索插入位置</strong></a><ul><li><a href="#head8">C++ solution</a></li><li><a href="#head9">Java solution</a></li></ul></li><li><a href="#head10"><strong>34. 在排序数组中查找元素的第一个和最后一个位置</strong> </a><ul><li><a href="#head11"> NOTE</a><ul><li><a href="#head12">1. 使用二分法在有序数组中查找某个数的左边界，即某个数第一次出现的位置</a></li><li><a href="#head13">2. 使用二分法在有序数组中查找某个数的右边界，即某个数最后一次出现的位置</a></li></ul></li><li><a href="#head14">C++ solution</a></li><li><a href="#head15">Java solution</a></li></ul></li></ul><h1 id="Ⅰ-704-二分查找"><a href="#Ⅰ-704-二分查找" class="headerlink" title=" Ⅰ 704 二分查找 "></a><span id="head1"> <strong><a href="https://leetcode.cn/problems/binary-search/">Ⅰ 704 二分查找</a></strong> </span></h1><p><img src="/2023/05/10/5-10-array-1%20binary-search/1.png" alt="704"></p><h2 id="NOTE"><a href="#NOTE" class="headerlink" title=" NOTE"></a><span id="head2"> NOTE</span></h2><h3 id="1-每次写二分最容易纠结的part就是下面C-代码里面的A-B-C-D行"><a href="#1-每次写二分最容易纠结的part就是下面C-代码里面的A-B-C-D行" class="headerlink" title="1. 每次写二分最容易纠结的part就是下面C++代码里面的A,B,C,D行"></a><span id="head3">1. 每次写二分最容易纠结的part就是下面C++代码里面的A,B,C,D行</span></h3><ul><li>A 处是用nums.size()-1还是nums.size()?</li><li>B 处是 &lt;&#x3D; 还是 &lt; ?</li><li>C 处是 mid 还是 mid - 1 ?</li><li>D 处是 mid 还是 mid + 1 ?</li></ul><p>null- 实际上这些不同的本质实际上是对于数组区间的划分法不同：</p><table><thead><tr><th></th><th>左闭右闭区间</th><th>左闭右开区间</th></tr></thead><tbody><tr><td>A</td><td><code>high=nums.size()-1</code></td><td><code>high=nums.size()</code></td></tr><tr><td>B</td><td><code> while(low&lt;=high)</code></td><td><code> while(low&lt;high)</code></td></tr><tr><td>C</td><td><code> high=mid-1;</code></td><td><code> high=mid;</code></td></tr><tr><td>D</td><td><code>low=mid+1;</code></td><td><code>low=mid+1;</code></td></tr></tbody></table><h3 id="2-二分法取中间值防溢出"><a href="#2-二分法取中间值防溢出" class="headerlink" title="2. 二分法取中间值防溢出"></a><span id="head4">2. 二分法取中间值防溢出</span></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mid = (low+high) / <span class="number">2</span></span><br></pre></td></tr></table></figure><p>E 处的写法在两大数相加的时候容易发生溢出，可以改成下面的写法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mid = low + (( high - low ) / <span class="number">2</span>)</span><br></pre></td></tr></table></figure><h2 id="C-solution"><a href="#C-solution" class="headerlink" title="C++ solution"></a><span id="head5">C++ solution</span></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> </span></span><br><span class="line"><span class="function">    <span class="type">int</span> <span class="title">search</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*A*/</span>   <span class="type">int</span> low=<span class="number">0</span>,high=nums.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*B*/</span>   <span class="keyword">while</span>(low&lt;=high)&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*E*/</span>        <span class="type">int</span> mid=(low+high)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(target==nums[mid])&#123;</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(target&lt;nums[mid])&#123;</span><br><span class="line"><span class="comment">/*C*/</span>           high=mid<span class="number">-1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">/*D*/</span>           low=mid+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Java-solution"><a href="#Java-solution" class="headerlink" title="Java solution"></a><span id="head6">Java solution</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> low=<span class="number">0</span>,high=nums.length-<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(low&lt;=high)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> mid=(low+high)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(nums[mid]==target)&#123;</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums[mid]&gt;=target)&#123;</span><br><span class="line">                high=mid-<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                low=mid+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Ⅱ-35-搜索插入位置"><a href="#Ⅱ-35-搜索插入位置" class="headerlink" title="Ⅱ  35. 搜索插入位置"></a><span id="head7"><strong><a href="https://leetcode.cn/problems/search-insert-position/">Ⅱ  35. 搜索插入位置</a></strong></span></h1><p><img src="/2023/05/10/5-10-array-1%20binary-search/2.png" alt="35"></p><h2 id="C-solution-1"><a href="#C-solution-1" class="headerlink" title="C++ solution"></a><span id="head8">C++ solution</span></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">searchInsert</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> low =<span class="number">0</span>,high=nums.<span class="built_in">size</span>()<span class="number">-1</span>,mid,ans=nums.<span class="built_in">size</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(low&lt;=high)&#123;</span><br><span class="line"></span><br><span class="line">            mid =(low+high)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(target&lt;=nums[mid])&#123;<span class="comment">//在左边 </span></span><br><span class="line">            ans=mid;</span><br><span class="line">                high=mid<span class="number">-1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                low=mid+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Java-solution-1"><a href="#Java-solution-1" class="headerlink" title="Java solution"></a><span id="head9">Java solution</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">searchInsert</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">low</span> <span class="operator">=</span> <span class="number">0</span>, high = nums.length-<span class="number">1</span>, ans = nums.length;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(low&lt;=high)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> ( low + high ) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(target &lt;= nums[mid])&#123;<span class="comment">// 在左边</span></span><br><span class="line"></span><br><span class="line">                ans = mid;</span><br><span class="line"></span><br><span class="line">                high = mid-<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                low = mid +<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">return</span> ans;   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Ⅲ-34-在排序数组中查找元素的第一个和最后一个位置"><a href="#Ⅲ-34-在排序数组中查找元素的第一个和最后一个位置" class="headerlink" title=" Ⅲ 34. 在排序数组中查找元素的第一个和最后一个位置"></a><span id="head10"><a href="https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array/"> <strong>Ⅲ 34. 在排序数组中查找元素的第一个和最后一个位置</strong></a></span></h1><p><img src="/2023/05/10/5-10-array-1%20binary-search/3.png" alt="34"></p><h2 id="NOTE-1"><a href="#NOTE-1" class="headerlink" title=" NOTE"></a><span id="head11"> NOTE</span></h2><h3 id="1-使用二分法在有序数组中查找某个数的左边界，即某个数第一次出现的位置"><a href="#1-使用二分法在有序数组中查找某个数的左边界，即某个数第一次出现的位置" class="headerlink" title="1. 使用二分法在有序数组中查找某个数的左边界，即某个数第一次出现的位置"></a><span id="head12">1. 使用二分法在有序数组中查找某个数的左边界，即某个数第一次出现的位置</span></h3><pre class="mermaid">    graph LR    A[Start] --> B{empty?}    B -- yes --> C[end]    B -- no --> D[ left border = 0 <br> right border = length-1 <br> ]    D --> F{target <= the middle element of array ?} f -- yes> G[the left border must in the left half,<br> so search the left half]    G --> I[right border = middle ]    F -- no --> H[the left border must in the right half,<br> so search the right half]     H --> J[left border = mid + 1]    I --> K{left border >= right vorder?}    J --> K    K --yes--> L{ the element of left border = target?}    K --no--> F    L --yes--> M[found the left border]    L --no--> C</=></pre><h3 id="2-使用二分法在有序数组中查找某个数的右边界，即某个数最后一次出现的位置"><a href="#2-使用二分法在有序数组中查找某个数的右边界，即某个数最后一次出现的位置" class="headerlink" title="2. 使用二分法在有序数组中查找某个数的右边界，即某个数最后一次出现的位置"></a><span id="head13">2. 使用二分法在有序数组中查找某个数的右边界，即某个数最后一次出现的位置</span></h3><p>与查找左边界不同的一个关键点有计算mid的时候需要l+r+1！<br>否则会陷入死循环</p><pre class="mermaid">    graph LR    a[start] --> b{empty?}    b --yes--> c[end]    b --no--> d[left border = 0<br>right border =lenth-1]    d --> e{target >= the middle element of the array <font color="red">+1!</font>?}    e --yes--> f[search the right half]    e -- no--> g[search the left half]    f--> h{ l>=r? }    g-->h    h--yes-->e    h--no-->i{the element of right border == target?}    i--yes-->j[found the right border]    i--no-->c</pre><h2 id="C-solution-2"><a href="#C-solution-2" class="headerlink" title="C++ solution"></a><span id="head14">C++ solution</span></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">searchRange</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> left = <span class="built_in">binarySearch</span>(nums,target,<span class="literal">true</span>);</span><br><span class="line">        <span class="type">int</span> right =  <span class="built_in">binarySearch</span>(nums,target,<span class="literal">false</span>)<span class="number">-1</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(left &lt;= right &amp;&amp; right &lt; nums.<span class="built_in">size</span>() &amp;&amp; nums[left] == target &amp;&amp; nums[right] == target)&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> vector&lt;<span class="type">int</span>&gt;&#123;left,right&#125;;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> vector&lt;<span class="type">int</span>&gt;&#123;<span class="number">-1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">binarySearch</span><span class="params">(vector&lt;<span class="type">int</span>&gt;nums,<span class="type">int</span> target,<span class="type">bool</span> isLeft)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> low =<span class="number">0</span>,high=nums.<span class="built_in">size</span>()<span class="number">-1</span>,mid,ans=nums.<span class="built_in">size</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(low&lt;=high)&#123;</span><br><span class="line">    </span><br><span class="line">    mid=(low+high)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(target&lt;nums[mid]||isLeft&amp;&amp;target&lt;=nums[mid])&#123;</span><br><span class="line">    ans = mid;</span><br><span class="line">    high = mid - <span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">low = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Java-solution-2"><a href="#Java-solution-2" class="headerlink" title="Java solution"></a><span id="head15">Java solution</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] searchRange(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">      <span class="type">int</span> [] arr=&#123;-<span class="number">1</span>,-<span class="number">1</span>&#125;;</span><br><span class="line"><span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> binarySearch(nums, target, <span class="literal">true</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> binarySearch(nums, target, <span class="literal">false</span>)-<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(left&lt;=right &amp;&amp; right&lt;nums.length &amp;&amp; nums[left] == target &amp;&amp; nums[right] == target)&#123;</span><br><span class="line">arr[<span class="number">0</span>]=left;</span><br><span class="line">arr[<span class="number">1</span>]=right;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> arr;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">binarySearch</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target, <span class="type">boolean</span> isLeft)</span>&#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">low</span> <span class="operator">=</span> <span class="number">0</span>, high = nums.length-<span class="number">1</span>, mid, ans = nums.length;</span><br><span class="line"><span class="keyword">while</span>(low&lt;=high)&#123;</span><br><span class="line">mid=(low+high)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(target &lt; nums[mid]|| isLeft &amp;&amp; target &lt;= nums[mid])&#123;</span><br><span class="line">ans = mid;</span><br><span class="line">high = mid - <span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">low = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> algorithm training </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
